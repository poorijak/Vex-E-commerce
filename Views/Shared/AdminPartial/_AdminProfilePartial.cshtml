@using Microsoft.AspNetCore.Identity;
@inject SignInManager<Customer> SignInManager
@inject UserManager<Customer> userManager

@{
    var user = await userManager.GetUserAsync(User);
    var profilePicture = user?.ProfilePictureUrl ?? "https://avatars.githubusercontent.com/u/124599?v=4";

}

<div class="relative hidden text-left transition-all duration-150 md:inline-block">

    <img id="admin-menu-button"
         class="size-9 cursor-pointer rounded-full"
         src="@profilePicture"
         alt="Profile Picture"
         aria-expanded="false"
         aria-haspopup="true" />

    <div id="admin-menu-items"
         class="absolute right-0 z-10 mt-2 hidden w-56 origin-top-right bg-white shadow-md ring-1 ring-border focus:outline-none"
         role="menu"
         aria-orientation="vertical"
         aria-labelledby="admin-menu-button"
         tabindex="-1">

        <div class="flex flex-col gap-3 p-1 font-medium" role="none">
            <div>
                <a asp-controller="Home" asp-action="Index" class="flex items-center gap-2 rounded-sm px-4 py-2 text-sm hover:bg-gray-100" role="menuitem" tabindex="-1">
                    <i class="ph ph-house"></i>
                    Home
                </a>
                <div class="my-1 h-px flex-1 bg-border"></div>
                <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" class="block w-full">
                    <button type="submit" class="flex w-full items-center gap-2 rounded-sm px-4 py-2 text-left text-sm text-gray-700 hover:bg-gray-100" role="menuitem" tabindex="-1">
                        <i class="ph ph-sign-out"></i>
                        Sign out
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const button = document.getElementById('admin-menu-button');
        const menu = document.getElementById('admin-menu-items');

        // ฟังก์ชันสำหรับสลับการแสดงผล (ใช้ได้เหมือนเดิม)
        button.addEventListener('click', function() {
            menu.classList.toggle('hidden');
        });

        // ฟังก์ชันสำหรับปิด Dropdown เมื่อคลิกนอกพื้นที่ (ใช้ได้เหมือนเดิม)
        document.addEventListener('click', function(event) {
            // ตรวจสอบว่าการคลิกไม่ได้เกิดบนปุ่ม (รูปโปรไฟล์) และไม่ได้เกิดบนเมนู
            if (!button.contains(event.target) && !menu.contains(event.target)) {
                if (!menu.classList.contains('hidden')) {
                    menu.classList.add('hidden');
                }
            }
        });
    });
</script>